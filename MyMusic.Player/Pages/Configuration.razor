@page "/config"
@attribute [NavigationInfo("oi-cog", "CONFIGURATION")]

@inject LocalDatabase localDb

<div class="container-fluid">
  <div class="w-75 m-auto">
    <h3>Actions</h3>
       <div class="row">
       <div class="col-3">
           <button @onclick="ClearLocalDatabase" class="btn btn-primary">Clear Local Database</button>
       </div>
       </div>
  </div>
  <div class="w-75 m-auto">
    <h3>Credentials</h3>
    <form>
      <div class="form-group mb-1">
        <label for="serverUrl">Server address</label>
        <input @bind-value="Model.ServerUrl" required type="text" class="form-control" id="serverUrl" aria-describedby="serverHelp" placeholder="Enter url">
      </div>
      <div class="form-group mb-1">
        <label for="serverPassword">Server Password</label>
        <input @bind-value="Model.ServerPassword" required type="password" class="form-control" id="serverPassword" placeholder="Password">
      </div>
      <div class="form-group mb-1">
        <label for="apiKey">API Key</label>
        <input @bind-value="Model.ApiKey" type="text" class="form-control" id="apiKey" aria-describedby="apikeyHelp" placeholder="Enter key">
      </div>
      <button @onclick="SaveConfiguration" type="button" class="btn btn-primary mt-2">Save Changes</button>
    </form>
  </div>
</div>


@code {
  private ServerConfiguration Model { get; set; } = new();

  protected override async Task OnInitializedAsync()
  {
    Model = await localDb.GetServerConfigurationAsync();
    #if DEBUG
     // Try env 
    if(string.IsNullOrEmpty(Model.ApiKey) || string.IsNullOrEmpty(Model.ServerUrl))
    {
     Model.ApiKey = EnviromentProvider.GetApiKey();
     Model.ServerUrl = EnviromentProvider.GetUrl();
    }
    #endif
  }

  async Task SaveConfiguration()
  {
    _ = await localDb.SaveServverconfigurationAsync(Model);
  }

  async Task ClearLocalDatabase()
  {
    await localDb.ClearDataAsync();
  }
}
